@model PluginModel
@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.SystemName)
@if (ViewBag.RefreshPage == true)
{
    <script type="text/javascript">
        try {
            window.opener.document.forms["@(ViewBag.formId)"].@(ViewBag.btnId).click();
        } catch (e) {
        }
        window.close();
    </script>
}
<script>
    $(document).ready(function() {
        $("#plugin-edit").kendoTabStrip({
            animation: {
                open: {
                    effects: "fadeIn"
                }
            },
            select: tabstrip_on_tab_select
        });
    });
</script>
<div id="plugin-edit">
    <ul>
        <li @Html.RenderSelectedTabIndex(0, GetSelectedTabIndex())>
            @T("Admin.Configuration.Plugins.Info")
        </li>

    </ul>
    <div>
        @TabInfo()
    </div>

</div>

@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(Html, "plugin-edit");
    EngineContext.Current.Resolve<IEventPublisher>().Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}


@helper TabInfo()
{
    @(Html.LocalizedEditor<PluginModel, PluginLocalizedModel>("plugin-localized",
          @<table class="adminContent">
              <tr>
                  <td class="adminTitle">
                      @Html.NopLabelFor(model => model.Locales[item].FriendlyName):
                  </td>
                  <td class="adminData">
                      @Html.EditorFor(model => model.Locales[item].FriendlyName)
                      @Html.ValidationMessageFor(model => model.Locales[item].FriendlyName)
                  </td>
              </tr>
              <tr>
                  <td colspan="2">
                      @Html.HiddenFor(model => model.Locales[item].LanguageId)
                  </td>
              </tr>
          </table>
        ,
          @<table class="adminContent">
              <tr>
                  <td class="adminTitle">
                      @Html.NopLabelFor(model => model.FriendlyName):
                  </td>
                  <td class="adminData">
                      @Html.EditorFor(model => model.FriendlyName)
                      @Html.ValidationMessageFor(model => model.FriendlyName)
                  </td>
              </tr>
          </table>
          ))
    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.DisplayOrder):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.DisplayOrder)
                @Html.ValidationMessageFor(model => model.DisplayOrder)
            </td>
        </tr>
        @if (Model.CanChangeEnabled)
        {
            <tr>
                <td class="adminTitle">
                    @Html.NopLabelFor(model => model.IsEnabled):
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => model.IsEnabled)
                    @Html.ValidationMessageFor(model => model.IsEnabled)
                </td>
            </tr>
        }
    </table>
}