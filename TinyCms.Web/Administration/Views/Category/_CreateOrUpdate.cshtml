@using TinyCms.Core.Domain.Common
@model CategoryModel

@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.Id)

<script>
    $(document).ready(function() {
        $("#category-edit").kendoTabStrip({
            animation: {
                open: {
                    effects: "fadeIn"
                }
            },
            select: tabstrip_on_tab_select
        });
    });
</script>
<div id="category-edit">
    <ul>
        <li @Html.RenderSelectedTabIndex(0, GetSelectedTabIndex())>
            @T("Admin.Catalog.Categories.Info")
        </li>
        <li @Html.RenderSelectedTabIndex(1, GetSelectedTabIndex())>
            @T("Admin.Common.SEO")
        </li>
        <li @Html.RenderSelectedTabIndex(2, GetSelectedTabIndex())>
            @T("Admin.Catalog.Categories.Posts")
        </li>
        <li @Html.RenderSelectedTabIndex(3, GetSelectedTabIndex())>
            @T("Admin.Catalog.Categories.Acl")
        </li>
    </ul>
    <div>
        @TabInfo()
    </div>
    <div>
        @TabSeo()
    </div>
    <div>
        @TabPosts()
    </div>
    <div>
        @TabAcl()
    </div>
</div>

@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(Html, "category-edit");
    EngineContext.Current.Resolve<IEventPublisher>().Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}


@*save selected tab index*@
<input type="hidden" id="selected-tab-index" name="selected-tab-index" value="@(GetSelectedTabIndex())">

@helper TabInfo()
{
    @(Html.LocalizedEditor<CategoryModel, CategoryLocalizedModel>("category-info-localized",
          @<table class="adminContent">
              <tr>
                  <td class="adminTitle">
                      @Html.NopLabelFor(model => model.Locales[item].Name):
                  </td>
                  <td class="adminData">
                      @Html.EditorFor(model => model.Locales[item].Name)
                      @Html.ValidationMessageFor(model => model.Locales[item].Name)
                  </td>
              </tr>
              <tr>
                  <td class="adminTitle">
                      @Html.NopLabelFor(model => model.Locales[item].Description):
                  </td>
                  <td class="adminData">
                      @Html.EditorFor(model => model.Locales[item].Description, "RichEditor")
                      @Html.ValidationMessageFor(model => model.Locales[item].Description)
                  </td>
              </tr>
              <tr>
                  <td colspan="2">
                      @Html.HiddenFor(model => model.Locales[item].LanguageId)
                  </td>
              </tr>
          </table>
        ,
          @<table class="adminContent">
              <tr>
                  <td class="adminTitle">
                      @Html.NopLabelFor(model => model.Name):
                  </td>
                  <td class="adminData">
                      @Html.EditorFor(model => model.Name)
                      @Html.ValidationMessageFor(model => model.Name)
                  </td>
              </tr>
              <tr>
                  <td class="adminTitle">
                      @Html.NopLabelFor(model => model.Description):
                  </td>
                  <td class="adminData">
                      @Html.EditorFor(x => x.Description, "RichEditor")
                      @Html.ValidationMessageFor(model => model.Description)
                  </td>
              </tr>
          </table>
          ))
    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.CategoryTemplateId):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.CategoryTemplateId, Model.AvailableCategoryTemplates)
                @Html.ValidationMessageFor(model => model.CategoryTemplateId)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.CategoryTypeId):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.CategoryTypeId, Model.AvailableCategoryTypes)
                @Html.ValidationMessageFor(model => model.CategoryTypeId)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.PictureId)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.PictureId)
                @Html.ValidationMessageFor(model => model.PictureId)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.ParentCategoryId):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.ParentCategoryId, Model.AvailableCategories)
                @Html.ValidationMessageFor(model => model.ParentCategoryId)
            </td>
        </tr>

        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.ShowOnHomePage):
            </td>
            <td class="adminData">
                @Html.EditorFor(x => x.ShowOnHomePage)
                @Html.ValidationMessageFor(model => model.ShowOnHomePage)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.IncludeInTopMenu):
            </td>
            <td class="adminData">
                @Html.EditorFor(x => x.IncludeInTopMenu)
                @Html.ValidationMessageFor(model => model.IncludeInTopMenu)
            </td>
        </tr>

        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.Published):
            </td>
            <td class="adminData">
                @Html.EditorFor(x => x.Published)
                @Html.ValidationMessageFor(model => model.Published)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.DisplayOrder):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.DisplayOrder)
                @Html.ValidationMessageFor(model => model.DisplayOrder)
            </td>
        </tr>
    </table>
}
@helper TabSeo()
{
    @(Html.LocalizedEditor<CategoryModel, CategoryLocalizedModel>("category-seo-localized",
          @<table class="adminContent">
              <tr>
                  <td class="adminTitle">
                      @Html.NopLabelFor(model => model.Locales[item].MetaKeywords):
                  </td>
                  <td class="adminData">
                      @Html.EditorFor(model => model.Locales[item].MetaKeywords)
                      @Html.ValidationMessageFor(model => model.Locales[item].MetaKeywords)
                  </td>
              </tr>
              <tr>
                  <td class="adminTitle">
                      @Html.NopLabelFor(model => model.Locales[item].MetaDescription):
                  </td>
                  <td class="adminData">
                      @Html.TextAreaFor(model => model.Locales[item].MetaDescription)
                      @Html.ValidationMessageFor(model => model.Locales[item].MetaDescription)
                  </td>
              </tr>
              <tr>
                  <td class="adminTitle">
                      @Html.NopLabelFor(model => model.Locales[item].MetaTitle):
                  </td>
                  <td class="adminData">
                      @Html.EditorFor(model => model.Locales[item].MetaTitle)
                      @Html.ValidationMessageFor(model => model.Locales[item].MetaTitle)
                  </td>
              </tr>
              <tr>
                  <td class="adminTitle">
                      @Html.NopLabelFor(model => model.Locales[item].SeName):
                  </td>
                  <td class="adminData">
                      @Html.EditorFor(model => model.Locales[item].SeName)
                      @Html.ValidationMessageFor(model => model.Locales[item].SeName)
                  </td>
              </tr>
              <tr>
                  <td colspan="2">
                      @Html.HiddenFor(model => model.Locales[item].LanguageId)
                  </td>
              </tr>
          </table>
        ,
          @<table class="adminContent">
              <tr>
                  <td class="adminTitle">
                      @Html.NopLabelFor(model => model.MetaKeywords):
                  </td>
                  <td class="adminData">
                      @Html.EditorFor(x => x.MetaKeywords)
                      @Html.ValidationMessageFor(model => model.MetaKeywords)
                  </td>
              </tr>
              <tr>
                  <td class="adminTitle">
                      @Html.NopLabelFor(model => model.MetaDescription):
                  </td>
                  <td class="adminData">
                      @Html.TextAreaFor(x => x.MetaDescription)
                      @Html.ValidationMessageFor(model => model.MetaDescription)
                  </td>
              </tr>
              <tr>
                  <td class="adminTitle">
                      @Html.NopLabelFor(model => model.MetaTitle):
                  </td>
                  <td class="adminData">
                      @Html.EditorFor(x => x.MetaTitle)
                      @Html.ValidationMessageFor(model => model.MetaTitle)
                  </td>
              </tr>
              <tr>
                  <td class="adminTitle">
                      @Html.NopLabelFor(model => model.SeName):
                  </td>
                  <td class="adminData">
                      @Html.EditorFor(x => x.SeName)
                      @Html.ValidationMessageFor(model => model.SeName)
                  </td>
              </tr>
          </table>))
}
@helper TabPosts()
{
        if (Model.Id > 0)
        {
            var defaultGridPageSize = EngineContext.Current.Resolve<AdminAreaSettings>().DefaultGridPageSize;
            var gridPageSizes = EngineContext.Current.Resolve<AdminAreaSettings>().GridPageSizes;

            <table class="adminContent">
                <tr>
                    <td>

                        <div id="products-grid"></div>

                        <script>
                            $(document).ready(function() {
                                $("#products-grid").kendoGrid({
                                    dataSource: {
                                        type: "json",
                                        transport: {
                                            read: {
                                                url: "@Html.Raw(Url.Action("PostList", "Category", new {categoryId = Model.Id}))",
                                                type: "POST",
                                                dataType: "json",
                                                data: addAntiForgeryToken
                                            },
                                            update: {
                                                url: "@Html.Raw(Url.Action("PostUpdate", "Category"))",
                                                type: "POST",
                                                dataType: "json",
                                                data: addAntiForgeryToken
                                            },
                                            destroy: {
                                                url: "@Html.Raw(Url.Action("PostDelete", "Category"))",
                                                type: "POST",
                                                dataType: "json",
                                                data: addAntiForgeryToken
                                            }
                                        },
                                        schema: {
                                            data: "Data",
                                            total: "Total",
                                            errors: "Errors",
                                            model: {
                                                id: "Id",
                                                fields: {
                                                    PostName: { editable: false, type: "string" },
                                                    IsFeaturedPost: { editable: true, type: "boolean" },
                                                    DisplayOrder: { editable: true, type: "number" },
                                                    PostId: { editable: false, type: "number" }
                                                }
                                            }
                                        },
                                        requestEnd: function(e) {
                                            if (e.type == "update") {
                                                this.read();
                                            }
                                        },
                                        error: function(e) {
                                            display_kendoui_grid_error(e);
                                            // Cancel the changes
                                            this.cancelChanges();
                                        },
                                        pageSize: @(defaultGridPageSize),
                                        serverPaging: true,
                                        serverFiltering: true,
                                        serverSorting: true
                                    },
                                    pageable: {
                                        refresh: true,
                                        pageSizes: [@(gridPageSizes)]
                                    },
                                    editable: {
                                        confirmation: false,
                                        mode: "inline"
                                    },
                                    scrollable: false,
                                    columns: [
                                    {
                                        field: "PostName",
                                        title: "@T("Admin.Catalog.Categories.Posts.Fields.Post")"
                                    }, {
                                        field: "IsFeaturedPost",
                                        title: "@T("Admin.Catalog.Categories.Posts.Fields.IsFeaturedPost")",
                                        width: 150,
                                        headerAttributes: { style: "text-align:center" },
                                        attributes: { style: "text-align:center" },
                                        template: "<img src=\"@Url.Content(\
            "~/Administration/Content/images/\")active-#=IsFeaturedPost#.gif\" />"
        },
        {
            "DisplayOrder",
            "@T("
            Admin.Catalog.Categories.Posts.Fields.DisplayOrder
            ")",
//integer format
            "{0:0}",
            150
        }
    ,
        {
            "PostId",
            "@T("
            Admin.Common.View
            ")",
            100,
            "<a href=\"@Url.Content(\"~/Admin/Post/Edit/\")#=PostId#\">@T(\"Admin.Common.View\")</a>"
        }
    ,
        {
            {
                "edit",
                {
                    "@T("
                    Admin.Common.Edit
                    ")",
                    "@T("
                    Admin.Common.Update
                    ")",
                    "@T("
                    Admin.Common.Cancel
                    ")"
                }
            }
        ,
            {
                "destroy",
                "@T("
                Admin.Common.Delete
                ")"
            }
        ],
            200
        }
    ]
    });
                                });
                                </script>
                    </td>
                </tr>
                <tr>
                    <td width="100%">
                        <input type="submit" id="btnAddNewPost" value="@T("Admin.Catalog.Categories.Posts.AddNew")" onclick="
                                javascript:OpenWindow('@(Url.Action("PostAddPopup", "Category", new {categoryId = Model.Id, btnId = "btnRefreshPosts", formId = "category-form"}))', 800, 800, true); return false; " class="k-button"/>
                        <input type="submit" id="btnRefreshPosts" style="display: none"/>
                        <script type="text/javascript">
                                $(document).ready(function() {
                                    $("#btnRefreshPosts").click(function() {
                                        //refresh grid
                                        var grid = $("#products-grid").data("kendoGrid");
                                        grid.dataSource.read();

                                        //return false to don't reload a page
                                        return false;
                                    });
                                });
                                </script>
                    </td>
                </tr>
            </table>
}

    else
        {
            @T("Admin.Catalog.Categories.Posts.SaveBeforeEdit")
        }
    }


@helper TabAcl()
{
    
    <script type="text/javascript">
                                $(document).ready(function() {

                                    $("#@Html.FieldIdFor(model => model.SubjectToAcl)").click(toggleAcl);

                                    toggleAcl();
                                });


                                function toggleAcl() {
                                    if ($("#@Html.FieldIdFor(model => model.SubjectToAcl)").is(":checked")) {
                                        $("#pnl-acl").show();
                                    } else {
                                        $("#pnl-acl").hide();
                                    }
                                }

                                </script>
    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SubjectToAcl):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.SubjectToAcl)
                @Html.ValidationMessageFor(model => model.SubjectToAcl)
            </td>
        </tr>
        <tr id="pnl-acl">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.AvailableCustomerRoles):
            </td>
            <td class="adminData">
                @if (Model.AvailableCustomerRoles != null && Model.AvailableCustomerRoles.Count > 0)
{
    @Html.Action("AclDisabledWarning", "Common")
    foreach (var customerRole in Model.AvailableCustomerRoles)
{
    <div>
        <input type="checkbox" name="SelectedCustomerRoleIds" value="@customerRole.Id" checked="@(Model.SelectedCustomerRoleIds != null && Model.SelectedCustomerRoleIds.Contains(customerRole.Id))" />@customerRole.Name
                    </div>
    }
    }
    else
{
    <div>No customer roles defined</div>
    }
            </td>
        </tr>
    </table>
        }
