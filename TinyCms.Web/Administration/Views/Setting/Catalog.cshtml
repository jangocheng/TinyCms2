@model CatalogSettingsModel
@{
    //page title
    ViewBag.Title = T("Admin.Configuration.Settings.Catalog").Text;
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="section-header">
        <div class="title">
            <img src="@Url.Content("~/Administration/Content/images/ico-configuration.png")" alt=""/>
            @T("Admin.Configuration.Settings.Catalog")
        </div>
        <div class="options">
            <input type="submit" name="save" class="k-button" value="@T("Admin.Common.Save")"/>
        </div>
    </div>

    @Html.ValidationSummary(false)

    <script>
        $(document).ready(function() {
            $("#catalogsettings-edit").kendoTabStrip({
                animation: {
                    open: {
                        effects: "fadeIn"
                    }
                },
                select: tabstrip_on_tab_select
            });
        });
    </script>
    <div id="catalogsettings-edit">
        <ul>
            <li @Html.RenderSelectedTabIndex(0, GetSelectedTabIndex())>
                @T("Admin.Configuration.Settings.Catalog.General")
            </li>
            <li @Html.RenderSelectedTabIndex(1, GetSelectedTabIndex())>
                @T("Admin.Configuration.Settings.Catalog.Performance")
            </li>
            <li @Html.RenderSelectedTabIndex(2, GetSelectedTabIndex())>
                @T("Admin.Configuration.Settings.Catalog.Search")
            </li>
        </ul>
        <div>
            @TabGeneralSettings()
        </div>
        <div>
            @TabPerformance()
        </div>
        <div>
            @TabSearchSettings()
        </div>
    </div>

    {
        //custom tabs
        var eventMessage = new AdminTabStripCreated(Html, "catalogsettings-edit");
        EngineContext.Current.Resolve<IEventPublisher>().Publish(eventMessage);
        foreach (var eventBlock in eventMessage.BlocksToRender)
        {
            @eventBlock
        }
    }

    @*save selected tab index*@
    <input type="hidden" id="selected-tab-index" name="selected-tab-index" value="@(GetSelectedTabIndex())">
}
@helper TabGeneralSettings()
{
    <script type="text/javascript">
        $(document).ready(function() {

            $("#@Html.FieldIdFor(model => model.ShowCategoryPostNumber)").click(toggleShowCategoryPostNumberIncludingSubcategories);
            $("#@Html.FieldIdFor(model => model.ShowBestsellersOnHomepage)").click(toggleBestsellersOnHomepage);

            toggleShowCategoryPostNumberIncludingSubcategories();
            toggleEmailAFriend();
            toggleRecentlyViewedPosts();
            toggleNewPosts();
            toggleBestsellersOnHomepage();
            togglePostsAlsoPurchasedNumber();
            togglePostsByTagPageSize();
        });

        function toggleShowCategoryPostNumberIncludingSubcategories() {
            if ($("#@Html.FieldIdFor(model => model.ShowCategoryPostNumber)").is(":checked")) {
                $("#pnlShowCategoryPostNumberIncludingSubcategories").show();
            } else {
                $("#pnlShowCategoryPostNumberIncludingSubcategories").hide();
            }
        }


        function toggleBestsellersOnHomepage() {
            if ($("#@Html.FieldIdFor(model => model.ShowBestsellersOnHomepage)").is(":checked")) {
                $("#pnlNumberOfBestsellersOnHomepage").show();
            } else {
                $("#pnlNumberOfBestsellersOnHomepage").hide();
            }
        }

    </script>
    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.PictureAndVideoCategoryId):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.PictureAndVideoCategoryId, Model.AvailableCategories)
                @Html.ValidationMessageFor(model => model.PictureAndVideoCategoryId)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.PictureAndVideoPostNumber):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.PictureAndVideoPostNumber)
                @Html.ValidationMessageFor(model => model.PictureAndVideoPostNumber)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.ShareCornerCategoryId):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.ShareCornerCategoryId, Model.AvailableCategories)
                @Html.ValidationMessageFor(model => model.ShareCornerCategoryId)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.ShareCornerPostNumber):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.ShareCornerPostNumber)
                @Html.ValidationMessageFor(model => model.ShareCornerPostNumber)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.DiscoveryCategoryId):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.DiscoveryCategoryId, Model.AvailableCategories)
                @Html.ValidationMessageFor(model => model.DiscoveryCategoryId)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.DiscoveryPostNumber):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.DiscoveryPostNumber)
                @Html.ValidationMessageFor(model => model.DiscoveryPostNumber)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.TravelViaPictureCategoryId):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.TravelViaPictureCategoryId, Model.AvailableCategories)
                @Html.ValidationMessageFor(model => model.TravelViaPictureCategoryId)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.TravelViaPicturePostNumber):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.TravelViaPicturePostNumber)
                @Html.ValidationMessageFor(model => model.TravelViaPicturePostNumber)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.PromotionCategoryId):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.PromotionCategoryId, Model.AvailableCategories)
                @Html.ValidationMessageFor(model => model.PromotionCategoryId)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.PromotionPostNumber):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.PromotionPostNumber)
                @Html.ValidationMessageFor(model => model.PromotionPostNumber)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SummerTourismId):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.SummerTourismId, Model.AvailableCategories)
                @Html.ValidationMessageFor(model => model.SummerTourismId)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SummerTourismPostNumber):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.SummerTourismPostNumber)
                @Html.ValidationMessageFor(model => model.SummerTourismPostNumber)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.ShowPostsFromSubcategories):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.ShowPostsFromSubcategories)
                @Html.ValidationMessageFor(model => model.ShowPostsFromSubcategories)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.ShowCategoryPostNumber):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.ShowCategoryPostNumber)
                @Html.ValidationMessageFor(model => model.ShowCategoryPostNumber)
            </td>
        </tr>
        <tr id="pnlShowCategoryPostNumberIncludingSubcategories">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.ShowCategoryPostNumberIncludingSubcategories):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.ShowCategoryPostNumberIncludingSubcategories)
                @Html.ValidationMessageFor(model => model.ShowCategoryPostNumberIncludingSubcategories)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.CategoryBreadcrumbEnabled):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CategoryBreadcrumbEnabled)
                @Html.ValidationMessageFor(model => model.CategoryBreadcrumbEnabled)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.ShowBestsellersOnHomepage):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.ShowBestsellersOnHomepage)
                @Html.ValidationMessageFor(model => model.ShowBestsellersOnHomepage)
            </td>
        </tr>
        <tr id="pnlNumberOfBestsellersOnHomepage">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.NumberOfBestsellersOnHomepage):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.NumberOfBestsellersOnHomepage)
                @Html.ValidationMessageFor(model => model.NumberOfBestsellersOnHomepage)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.NumberOfPostTags):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.NumberOfPostTags)
                @Html.ValidationMessageFor(model => model.NumberOfPostTags)
            </td>
        </tr>

    </table>
}
@helper TabPerformance()
{
    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.IgnoreAcl):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.IgnoreAcl)
                @Html.ValidationMessageFor(model => model.IgnoreAcl)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.IgnoreStoreLimitations):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.IgnoreStoreLimitations)
                @Html.ValidationMessageFor(model => model.IgnoreStoreLimitations)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.IgnoreFeaturedPosts):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.IgnoreFeaturedPosts)
                @Html.ValidationMessageFor(model => model.IgnoreFeaturedPosts)
            </td>
        </tr>
    </table>
}
@helper TabSearchSettings()
{
    <script type="text/javascript">
        $(document).ready(function() {

            $("#@Html.FieldIdFor(model => model.SearchPageAllowCustomersToSelectPageSize)").click(toggleSearchPagePageSize);
            $("#@Html.FieldIdFor(model => model.PostSearchAutoCompleteEnabled)").click(togglePostSearchAutoComplete);

            toggleSearchPagePageSize();
            togglePostSearchAutoComplete();
        });

        function toggleSearchPagePageSize() {
            if ($("#@Html.FieldIdFor(model => model.SearchPageAllowCustomersToSelectPageSize)").is(":checked")) {
                $("#pnlSearchPagePostsPerPage").hide();
                $("#pnlSearchPagePageSizeOptions").show();
            } else {
                $("#pnlSearchPagePostsPerPage").show();
                $("#pnlSearchPagePageSizeOptions").hide();
            }
        }

        function togglePostSearchAutoComplete() {
            if ($("#@Html.FieldIdFor(model => model.PostSearchAutoCompleteEnabled)").is(":checked")) {
                $("#pnlPostSearchAutoCompleteNumberOfPosts").show();
                $("#pnlShowPostImagesInSearchAutoComplete").show();
            } else {
                $("#pnlPostSearchAutoCompleteNumberOfPosts").hide();
                $("#pnlShowPostImagesInSearchAutoComplete").hide();
            }
        }

    </script>
    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchPageAllowCustomersToSelectPageSize):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.SearchPageAllowCustomersToSelectPageSize)
                @Html.ValidationMessageFor(model => model.SearchPageAllowCustomersToSelectPageSize)
            </td>
        </tr>
        <tr id="pnlSearchPagePostsPerPage">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchPagePostsPerPage):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.SearchPagePostsPerPage)
                @Html.ValidationMessageFor(model => model.SearchPagePostsPerPage)
            </td>
        </tr>
        <tr id="pnlSearchPagePageSizeOptions">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchPagePageSizeOptions):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.SearchPagePageSizeOptions)
                @Html.ValidationMessageFor(model => model.SearchPagePageSizeOptions)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.PostSearchAutoCompleteEnabled):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.PostSearchAutoCompleteEnabled)
                @Html.ValidationMessageFor(model => model.PostSearchAutoCompleteEnabled)
            </td>
        </tr>
        <tr id="pnlPostSearchAutoCompleteNumberOfPosts">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.PostSearchAutoCompleteNumberOfPosts):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.PostSearchAutoCompleteNumberOfPosts)
                @Html.ValidationMessageFor(model => model.PostSearchAutoCompleteNumberOfPosts)
            </td>
        </tr>
        <tr id="pnlShowPostImagesInSearchAutoComplete">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.ShowPostImagesInSearchAutoComplete):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.ShowPostImagesInSearchAutoComplete)
                @Html.ValidationMessageFor(model => model.ShowPostImagesInSearchAutoComplete)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.PostSearchTermMinimumLength):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.PostSearchTermMinimumLength)
                @Html.ValidationMessageFor(model => model.PostSearchTermMinimumLength)
            </td>
        </tr>

    </table>
}