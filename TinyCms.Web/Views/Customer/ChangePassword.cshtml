@model ChangePasswordModel
@{
    Layout = "~/Views/Shared/_OneColumn.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    var validationSummary = Html.ValidationSummary(true, T("Account.Login.Unsuccessful").Text);
    <div class="loginpage reg">
        <h1>Đổi mật khẩu</h1>
        <div class="page_inner">
            <div class="content">
                @if (!String.IsNullOrEmpty(Model.Result))
                {
                    <label>
                        <div class="result">
                            @Model.Result
                        </div>
                    </label>
                }
                @if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
                {
                    <label>
                        <div class="message-error">@validationSummary</div>
                    </label>
                }
                <label>
                    @Html.PasswordFor(model => model.OldPassword, new { @class = "txtinput", placeholder = "Mất khẩu cũ" })
                    @Html.ValidationMessageFor(model => model.OldPassword)
                </label>
                <label>
                    @Html.PasswordFor(model => model.NewPassword, new { @class = "txtinput", placeholder = "Mật khẩu mới" })
                    @Html.ValidationMessageFor(model => model.NewPassword)
                </label>
                <label>
                    @Html.PasswordFor(model => model.ConfirmNewPassword, new { @class = "txtinput", placeholder = "Xác nhận mật khẩu" })
                    @Html.ValidationMessageFor(model => model.ConfirmNewPassword)
                </label>
                <p class="actbtn">
                    <button class="loginbtn">Đổi Mật Khẩu</button>
                </p>
            </div>
        </div>
    </div>
}
